# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ItemID(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, quantity: float=None, store_id: float=None, itemtype_id: float=None):  # noqa: E501
        """ItemID - a model defined in Swagger

        :param id: The id of this ItemID.  # noqa: E501
        :type id: int
        :param quantity: The quantity of this ItemID.  # noqa: E501
        :type quantity: float
        :param store_id: The store_id of this ItemID.  # noqa: E501
        :type store_id: float
        :param itemtype_id: The itemtype_id of this ItemID.  # noqa: E501
        :type itemtype_id: float
        """
        self.swagger_types = {
            'id': int,
            'quantity': float,
            'store_id': float,
            'itemtype_id': float
        }

        self.attribute_map = {
            'id': 'id',
            'quantity': 'quantity',
            'store_id': 'storeID',
            'itemtype_id': 'itemtypeID'
        }
        self._id = id
        self._quantity = quantity
        self._store_id = store_id
        self._itemtype_id = itemtype_id

    @classmethod
    def from_dict(cls, dikt) -> 'ItemID':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ItemID of this ItemID.  # noqa: E501
        :rtype: ItemID
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this ItemID.


        :return: The id of this ItemID.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this ItemID.


        :param id: The id of this ItemID.
        :type id: int
        """

        self._id = id

    @property
    def quantity(self) -> float:
        """Gets the quantity of this ItemID.


        :return: The quantity of this ItemID.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity: float):
        """Sets the quantity of this ItemID.


        :param quantity: The quantity of this ItemID.
        :type quantity: float
        """

        self._quantity = quantity

    @property
    def store_id(self) -> float:
        """Gets the store_id of this ItemID.


        :return: The store_id of this ItemID.
        :rtype: float
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id: float):
        """Sets the store_id of this ItemID.


        :param store_id: The store_id of this ItemID.
        :type store_id: float
        """

        self._store_id = store_id

    @property
    def itemtype_id(self) -> float:
        """Gets the itemtype_id of this ItemID.


        :return: The itemtype_id of this ItemID.
        :rtype: float
        """
        return self._itemtype_id

    @itemtype_id.setter
    def itemtype_id(self, itemtype_id: float):
        """Sets the itemtype_id of this ItemID.


        :param itemtype_id: The itemtype_id of this ItemID.
        :type itemtype_id: float
        """

        self._itemtype_id = itemtype_id
