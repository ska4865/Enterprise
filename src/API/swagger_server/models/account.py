# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Account(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, name: str=None, budget: float=None):  # noqa: E501
        """Account - a model defined in Swagger

        :param id: The id of this Account.  # noqa: E501
        :type id: int
        :param name: The name of this Account.  # noqa: E501
        :type name: str
        :param budget: The budget of this Account.  # noqa: E501
        :type budget: float
        """
        self.swagger_types = {
            'id': int,
            'name': str,
            'budget': float
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'budget': 'budget'
        }
        self._id = id
        self._name = name
        self._budget = budget

    @classmethod
    def from_dict(cls, dikt) -> 'Account':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Account of this Account.  # noqa: E501
        :rtype: Account
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Account.


        :return: The id of this Account.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Account.


        :param id: The id of this Account.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Account.


        :return: The name of this Account.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Account.


        :param name: The name of this Account.
        :type name: str
        """

        self._name = name

    @property
    def budget(self) -> float:
        """Gets the budget of this Account.


        :return: The budget of this Account.
        :rtype: float
        """
        return self._budget

    @budget.setter
    def budget(self, budget: float):
        """Sets the budget of this Account.


        :param budget: The budget of this Account.
        :type budget: float
        """

        self._budget = budget
